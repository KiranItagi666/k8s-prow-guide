# Fully Updated prow-starter.yaml
# - Removed v1beta1 CRD block
# - Added selectors to all Deployments
# - Updated apiVersions to apps/v1 for Deployments, rbac/v1, networking.k8s.io/v1
# - Removed GCS dependencies from Deck

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: plugins
data:
  plugins.yaml: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: config
data:
  config.yaml: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: label-config
data:
  labels.yaml: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: job-config

---
# Minimal ProwJob CRD (apply separately if needed)
# apiVersion: apiextensions.k8s.io/v1
# kind: CustomResourceDefinition
# ... minimal CRD YAML here ...

---
# Hook Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: hook
  labels:
    app: hook
spec:
  selector:
    matchLabels:
      app: hook
  replicas: 1
  template:
    metadata:
      labels:
        app: hook
    spec:
      serviceAccountName: prow
      terminationGracePeriodSeconds: 180
      containers:
      - name: hook
        image: gcr.io/k8s-prow/hook:v20190405-651ad49e6
        args:
        - --dry-run=false
        - --job-config-path=/etc/job-config
        ports:
        - name: http
          containerPort: 8888
        volumeMounts:
        - name: hmac
          mountPath: /etc/webhook
          readOnly: true
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: plugins
          mountPath: /etc/plugins
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8081
      volumes:
      - name: hmac
        secret:
          secretName: hmac
      - name: oauth
        secret:
          secretName: oauth
      - name: config
        configMap:
          name: config
      - name: plugins
        configMap:
          name: plugins
      - name: job-config
        configMap:
          name: job-config
---
# Hook Service
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: hook
spec:
  selector:
    app: hook
  ports:
  - port: 8888
    targetPort: 8888
    nodePort: 30488
  type: NodePort

---
# Plank Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: plank
  labels:
    app: plank
spec:
  selector:
    matchLabels:
      app: plank
  replicas: 1
  template:
    spec:
      serviceAccount: prow
    metadata:
      labels:
        app: plank
    spec:
      containers:
      - name: plank
        image: gcr.io/k8s-prow/plank:v20190405-651ad49e6
        args:
        - --dry-run=false
        - --job-config-path=/etc/job-config
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
      volumes:
      - name: oauth
        secret:
          secretName: oauth
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config

---
# Sinker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: sinker
  labels:
    app: sinker
spec:
  selector:
    matchLabels:
      app: sinker
  replicas: 1
  template:
    metadata:
      labels:
        app: sinker
    spec:
      serviceAccountName: prow
      containers:
      - name: sinker
        image: gcr.io/k8s-prow/sinker:v20190405-651ad49e6
        args:
        - --dry-run=false
        - --job-config-path=/etc/job-config
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config

---
# Deck Deployment (no GCS)
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: deck
  labels:
    app: deck
spec:
  selector:
    matchLabels:
      app: deck
  replicas: 1
  template:
    metadata:
      labels:
        app: deck
    spec:
      serviceAccountName: prow
      terminationGracePeriodSeconds: 30
      containers:
      - name: deck
        image: gcr.io/k8s-prow/deck:v20190405-651ad49e6
        args:
        - --tide-url=http://tide/
        - --hook-url=http://hook:8888/plugin-help
        - --job-config-path=/etc/job-config
        - --spyglass=true
        ports:
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config
---
# Deck Service
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: deck
spec:
  selector:
    app: deck
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 32710
  type: NodePort

---
# Horologium Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: horologium
  labels:
    app: horologium
spec:
  selector:
    matchLabels:
      app: horologium
  replicas: 1
  template:
    metadata:
      labels:
        app: horologium
    spec:
      serviceAccountName: prow
      terminationGracePeriodSeconds: 30
      containers:
      - name: horologium
        image: gcr.io/k8s-prow/horologium:v20190405-651ad49e6
        args:
        - --job-config-path=/etc/job-config
        - --dry-run=false
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config

---
# Tide Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: tide
  labels:
    app: tide
spec:
  selector:
    matchLabels:
      app: tide
  replicas: 1
  template:
    metadata:
      labels:
        app: tide
    spec:
      serviceAccountName: prow
      containers:
      - name: tide
        image: gcr.io/k8s-prow/tide:v20190405-651ad49e6
        args:
        - --dry-run=false
        - --job-config-path=/etc/job-config
        ports:
        - name: http
          containerPort: 8888
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
      volumes:
      - name: oauth
        secret:
          secretName: oauth
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config
---
# Tide Service
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: tide
spec:
  selector:
    app: tide
  ports:
  - port: 80
    targetPort: 8888
  type: NodePort

---
# Ingress for Hook and Deck
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: default
  name: prow-ingress
spec:
  rules:
  - http:
      paths:
      - path: /hook
        pathType: Prefix
        backend:
          service:
            name: hook
            port:
              number: 8888
      - path: /
        pathType: Prefix
        backend:
          service:
            name: deck
            port:
              number: 80
